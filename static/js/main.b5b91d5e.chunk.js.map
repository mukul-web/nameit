{"version":3,"sources":["Header/Header.js","SearchBox/SearchBox.js","NameCard/NameCard.js","ResultContainer/ResultContainer.js","App/App.js","reportWebVitals.js","index.js"],"names":["Header","headTitle","x","className","src","alt","SearchBox","outputChange","onChange","event","target","value","placeholder","NameCard","suggestedName","href","rel","classname","ResultContainer","suggestednameJsx","suggestedNames","map","name","require","App","state","headExpanded","handleInputChange","text","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAiBeA,EAfF,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,UAAWC,EAAK,EAALA,EACtB,OAEK,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,wGACRD,UAAS,qBACTD,EAAC,+CAEDG,IAAI,gBACL,oBAAIF,UAAS,oBACZD,EAAC,6CADF,SAEOD,QCDLK,G,MAVC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACG,qBAAKJ,UAAU,mBAAf,SACK,uBACCK,SAAY,SAACC,GAASF,EAAaE,EAAMC,OAAOC,QAChDC,YAAY,gBACZT,UAAU,qBCURU,G,MAdA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,cACb,OACI,mBACIJ,OAAO,SACPK,KAAI,UALD,mEAKC,OAAiBD,GACrBE,IAAI,aACJC,UAAU,mBAJd,SAMI,qBAAKd,UAAU,mBAAf,SACK,mBAAuBA,UAAU,cAAjC,SAAgDW,GAAxCA,SCCXI,G,MAXO,SAAC,GAAoB,IACjCC,EADgC,EAAlBC,eACkBC,KAAI,SAACP,GAEvC,OAAO,cAAC,EAAD,CAAUA,cAAeA,OAErC,OACA,qBAAKX,UAAU,oBAAf,SACI,4BAAIgB,QCJLG,G,MAAMC,EAAQ,KA2CLC,E,4MAvCbC,MAAM,CACJC,cAAc,EACdN,eAAe,I,EAGjBO,kBAAkB,SAACC,GAEhB,EAAKC,SAAS,CACZH,cAAgBE,EAChBR,eAAgBQ,EAAMN,EAAKM,GAAM,M,4CAOtC,WAEE,OACC,sBAAKzB,UAAU,gBAAf,UAEC,cAAC,EAAD,CAEGD,EAAG4B,KAAKL,MAAMC,eACjB,cAAC,EAAD,CAAWnB,aAAcuB,KAAKH,oBAC9B,cAAC,EAAD,CAAiBP,eAAgBU,KAAKL,MAAML,wB,GA3BhCW,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b5b91d5e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css'\r\nconst Header=({headTitle, x})=>{\r\n    return (\r\n\r\n         <div className=\"head-container\">\r\n             <img src=\"https://user-images.githubusercontent.com/26179770/106359099-693e3380-6336-11eb-8069-9e36f25de5ca.png\" \r\n              className={`head-image ${\r\n              x ? `head-image-expanded`: `head-image-contracted`\r\n              }`} \r\n              alt=\"headerImage\"/> \r\n             <h1 className={`head-text ${\r\n              x ? `head-text-expanded`: `head-text-contracted`\r\n              }`} >{headTitle}</h1>\r\n         </div>\r\n    );\r\n}\r\nexport default Header;\r\n","import React from 'react'\r\nimport './SearchBox.css';\r\nconst SearchBox=({outputChange})=>{\r\n    return (\r\n       <div className=\"search-container\">\r\n            <input \r\n             onChange = {(event)=>{outputChange(event.target.value)}}\r\n             placeholder=\"Type keywords\"  \r\n             className=\"search-input\"/>\r\n       </div>\r\n    );\r\n};\r\nexport default SearchBox;","import React from 'react';\r\nimport  './NameCard.css';\r\n\r\nconst nameCheap='https://www.namecheap.com/domains/registration/results/?domain=';\r\nconst NameCard=({ suggestedName})=>{\r\n     return (\r\n         <a  \r\n             target=\"_blank\"\r\n             href={`${nameCheap}${suggestedName}`}\r\n             rel=\"noreferrer\" \r\n             classname=\"result-name-link\">\r\n             \r\n             <div className=\"result-name-card\">\r\n                  <p key={suggestedName} className=\"result-name\">{suggestedName}</p>\r\n             </div>\r\n         </a>\r\n     );\r\n};\r\nexport default NameCard;","import React from 'react';\r\nimport NameCard from '../NameCard/NameCard';\r\nimport './ResultContainer.css';\r\nconst ResultContainer=({suggestedNames})=>{\r\n    const suggestednameJsx=suggestedNames.map((suggestedName)=>{\r\n        //return <p key={suggestedName}>{suggestedName}</p>\r\n        return <NameCard suggestedName={suggestedName}/>\r\n    });\r\n   return (\r\n   <div className=\"results-container\">\r\n       <p>{suggestednameJsx}</p>\r\n   </div>\r\n   );\r\n};\r\nexport default ResultContainer;","import React from 'react';\nimport Header from '../Header/Header';\nimport SearchBox from '../SearchBox/SearchBox';\nimport ResultContainer from '../ResultContainer/ResultContainer';\nimport './App.css';\n\nconst name= require('@rstacruz/startup-name-generator');\n\nclass App extends React.Component{                           //class component\n  //state syntax\n  state={\n    headExpanded: true,\n    suggestedNames:[],\n  };\n  \n  handleInputChange=(text)=>{\n    \n     this.setState({\n       headExpanded:  !text,\n       suggestedNames: text? name(text):[],\n     });\n     //or you can write---- text.length>0? false: true\n  };\n  \n  \n\n  render(){\n    //console.log(name('cloud'));\n    return (\n     <div className=\"app-container\">\n      {/* //see how to use props  */}\n      <Header \n         //headTitle={this.state.headerText}\n         x={this.state.headExpanded}/>           \n      <SearchBox outputChange={this.handleInputChange}/>\n      <ResultContainer suggestedNames={this.state.suggestedNames}/>\n      {/*\\ //see how to use states\n\n      <h2>{this.state.headerText}</h2>\n      <button onClick={()=>(\n        this.setState({\n          headerText:\"Whoaaaaa It's changing!\"\n        }) \n      )}>Click Here</button> */}\n\n    </div>\n    )};\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}